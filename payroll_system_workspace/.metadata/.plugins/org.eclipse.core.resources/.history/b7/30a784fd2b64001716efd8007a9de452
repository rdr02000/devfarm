import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


public class MUM {
	public static int hasSingleMaximum(int[] arr) {
		int max = (arr.length == 0)? 0 : arr[0];
		int found = 1;
		
		for (int i = 1; i < arr.length; i++) {
			if (arr[i] > max) {
				max = arr[i];
				found = 1; 
			} else if (max == arr[i]) {
				found += 1;
			}
		}
		
		return (found != 1 || arr.length == 0)? 0 : 1;
	}
	
	
	public static int isPrimeHappy(int n) {
		int sumPrime = 0;
		
		if (n == 2) return 0;
		
		for (int i = 2; i < n; i++) {
			if (isPrime(i)) {
				sumPrime += i;
			}
		}
		
		return (sumPrime % n == 0) ? 1 : 0;
	}
	
	private static boolean isPrime(int n) {
		//we are sure 2 is prime
		if (n == 2) return true;
		
		//multiple of 2 is not prime except 2 itself
	    if (n%2==0) return false;
	    
	    //then check the odd numbers
	    for(int i = 3; i*i <= n; i+=2) {
	        if(n%i == 0) {
	            return false;
	        }
	    }
	    
	    return true;
	}
	
	public static int isTwinPaired(int[] arr) {
		List<Integer> odds = new ArrayList<Integer>();
		List<Integer> evens = new ArrayList<Integer>();
		
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] % 2 == 0){
				evens.add(arr[i]);
			} else {
				odds.add(arr[i]);
			}
		}
		
		return (isAscending(odds) && isAscending(evens)) ? 1 : 0;
	}
	
	private static boolean isAscending(List<Integer> list) {
		 boolean sorted = true;        
		 for (int i = 1; i < list.size(); i++) {
			 if (list.get(i-1).compareTo(list.get(i)) > 0) sorted = false;
		 }

		 return sorted;
	}
	
	public static void main(String[] args) {
		/*System.out.println(MUM.hasSingleMaximum(new int[]{1, 2, 3, 1, 0}));
		System.out.println(MUM.hasSingleMaximum(new int[]{18}));
		System.out.println(MUM.hasSingleMaximum(new int[]{1, 2, 3, 0, 1, 3}));
		System.out.println(MUM.hasSingleMaximum(new int[]{13, 1, 13, 2, 13, 0, 13, 1, 13}));
		System.out.println(MUM.hasSingleMaximum(new int[]{}));
		System.out.println(MUM.hasSingleMaximum(new int[]{-6, -6, -6, -6, -6, -6, -6}));*/
		
		/*System.out.println(MUM.isPrimeHappy(5));
		System.out.println(MUM.isPrimeHappy(25));
		System.out.println(MUM.isPrimeHappy(32));
		System.out.println(MUM.isPrimeHappy(8));
		System.out.println(MUM.isPrimeHappy(2));*/
		
		System.out.println(MUM.isTwinPaired(new int[]{2, 2, 2, 1, 1, 1}));
	}
}
